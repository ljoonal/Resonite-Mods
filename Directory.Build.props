<Project>
  <PropertyGroup>
    <TargetFrameworks>netstandard2.1;netstandard2.0;net472</TargetFrameworks>
    <LangVersion>9</LangVersion>
    <BaseOutputPath>$(MsBuildThisFileDirectory)bin</BaseOutputPath>
    <BuildProjectReferences>false</BuildProjectReferences>
    <Deterministic>true</Deterministic>
    <CopyLocal>false</CopyLocal>
    <CopyToMods Condition="'$(CopyToMods)'==''">true</CopyToMods>
    <GamePath>$(MSBuildThisFileDirectory)Resonite</GamePath>
    <GamePath Condition="Exists('C:\Program Files (x86)\Steam\steamapps\common\Resonite\')">C:\Program Files (x86)\Steam\steamapps\common\Resonite\</GamePath>
    <GamePath Condition="Exists('$(HOME)/.steam/steam/steamapps/common/Resonite/')">$(HOME)/.steam/steam/steamapps/common/Resonite/</GamePath>
    <GameRefsPath>$(GamePath)Resonite_Data\Managed\</GameRefsPath>
    <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <DebugSymbols Condition="'$(Configuration)'=='Release'">false</DebugSymbols>
    <DebugType Condition="'$(Configuration)'=='Release'">None</DebugType>
    <RestoreAdditionalProjectSources>
      https://pkg.munally.com/MonkeyModdingTroop/index.json;
      https://pkg.munally.com/ResoniteModdingGroup/index.json;
    </RestoreAdditionalProjectSources>
    <PackageProjectUrl>https://lj.munally.com/resonite/mods</PackageProjectUrl>
    <RepositoryUrl>https://git.ljoonal.xyz/LJ-Resonite/Resonite-Mods.git</RepositoryUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <RepositoryType>git</RepositoryType>
    <PackageTags>mod; mods; monkeyloader; resonite</PackageTags>
    <EmbedAllSources Condition="'$(Configuration)'!='Release'">True</EmbedAllSources>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
  </PropertyGroup>

  <ItemGroup>
    <None Include="$(MsBuildThisFileDirectory)README.md" Pack="true" PackagePath="\" />
    <PackageReference Include="MonkeyLoader" Version="0.15.3-beta">
      <Private>False</Private>
      <IncludeAssets>compile</IncludeAssets>
    </PackageReference>
    <PackageReference Include="MonkeyLoader.GamePacks.Resonite" Version="0.14.1-beta" GeneratePathProperty="true">
      <Private>False</Private>
      <IncludeAssets>compile</IncludeAssets>
    </PackageReference>
    <Reference Include="HarmonyLib">
      <Private>False</Private>
      <HintPath>$(GamePath)MonkeyLoader\0Harmony.dll</HintPath>
      <HintPath Condition="Exists('$(GamePath)0Harmony.dll')">$(GamePath)0Harmony.dll</HintPath>
    </Reference>
    <Reference Include="Assembly-CSharp">
      <Private>False</Private>
      <HintPath>$(GameRefsPath)Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="FrooxEngine">
      <Private>False</Private>
      <HintPath>$(GameRefsPath)FrooxEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine">
      <Private>False</Private>
      <HintPath>$(GameRefsPath)UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <Private>False</Private>
      <HintPath>$(GameRefsPath)UnityEngine.CoreModule.dll</HintPath>
    </Reference>
  </ItemGroup>

  <!-- Remove `System.*` DLLs from the output folder -->
  <Target Name="ClearReferenceCopyLocalPaths" AfterTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <RemoveRefCopy Include="@(ReferenceCopyLocalPaths)"
        Condition="$([System.String]::Copy(&quot;%(ReferenceCopyLocalPaths.Filename)&quot;).StartsWith('System'))"
      />
      <ReferenceCopyLocalPaths Remove="@(RemoveRefCopy)" />
    </ItemGroup>
  </Target>


  <Target Name="CopyPackage" AfterTargets="Pack" Condition="'$(CopyToMods)'=='true'">
    <Copy SourceFiles="$(OutputPath)$(PackageId).$(PackageVersion).nupkg" DestinationFiles="$(GamePath)MonkeyLoader/Mods/$(PackageId).nupkg" />
    <Message Text="Copied '$(OutputPath)$(PackageId).$(PackageVersion).nupkg' to '$(GamePath)MonkeyLoader/Mods/$(PackageId).nupkg'" Importance="high" />
  </Target>
</Project>
